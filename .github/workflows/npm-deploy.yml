name: Deploy to amazon ec2

on:
  push:
    tags:
      - "v*"
    branches:
      - "master"

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: handwritingservercodebuildstorage
  CODE_DEPLOY_APPLICATION_NAME: handwriting_front
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: handwriting-front-group

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install # 실수 3 npm install 실행하지 않아 npm run build 시 라이브러리 의존성을 해결하지 못해 실패
      - name: Generate build
        run: CI='false' npm run build # 실수 1 ci true가 디폴트로 설정되어 npm run build가 workflow 실패
        
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: build # upload 폴더 이름
          path: build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: build # download 폴더 이름 : 실수 2 upload 폴더와 download 폴더 이름이 달라 에러 발생
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GIT_ACTION_USER_NAME }} # 실수 4 IAM access key 생성해야하는데 AWS CodeCommit에 대한 HTTPS Git 자격 증명을 생성
          aws-secret-access-key: ${{ secrets.AWS_GIT_ACTION_PASSWORD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to AWS S3
        run: |
          aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
